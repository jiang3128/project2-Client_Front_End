{"ast":null,"code":"//Enable add new key Enum\nexport const Action = Object.freeze({\n  LoadMemories: 'LoadMemories',\n  FinishAddingOrder: 'FinishAddingOrder',\n  EnterEditMode: 'EnterEditMode',\n  LeaveEditMode: 'LeaveEditMode',\n  FinishSavingOrder: 'FinishSavingOrder',\n  FinishDeletingOrder: 'FinishDeletingOrder',\n  StartWaiting: 'StartWaiting'\n}); //Action Creaters \n\nexport function startWaiting() {\n  return {\n    type: Action.StartWaiting\n  };\n}\nexport function loadMemories(memories) {\n  return {\n    type: Action.LoadMemories,\n    payload: memories\n  };\n}\nexport function finishAddingOrder(memory) {\n  return {\n    type: Action.FinishAddingOrder,\n    payload: memory\n  };\n}\nexport function enterEditMode(memory) {\n  return {\n    type: Action.EnterEditMode,\n    payload: memory\n  };\n}\nexport function leaveEditMode(memory) {\n  return {\n    type: Action.LeaveEditMode,\n    payload: memory\n  };\n}\nexport function finishSavingOrder(memory) {\n  return {\n    type: Action.FinishSavingOrder,\n    payload: memory\n  };\n}\nexport function finishDeletingOrder(memory) {\n  return {\n    type: Action.FinishDeletingOrder,\n    payload: memory\n  };\n}\n\nfunction checkForErrors(response) {\n  if (!response.ok) {\n    throw Error(`${response.status}: ${response.statusText}`);\n  }\n\n  return response;\n}\n\nconst host = 'https://zhuj3128.duckdns.org:8442';\nexport function loadDay(month, day) {\n  // return function\n  return dispatch => {\n    //run background\n    dispatch(startWaiting());\n    fetch(`${host}/memories/${month}/${day}`).then(checkForErrors).then(response => response.json()).then(data => {\n      if (data.ok) {\n        console.log(data.memories);\n        dispatch(loadMemories(data.memories));\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function startAddingOrder(year, month, day) {\n  const memory = {\n    year,\n    month,\n    day,\n    message: ''\n  };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(memory)\n  };\n  return dispatch => {\n    dispatch(startWaiting());\n    fetch(`${host}/memories`, options).then(checkForErrors).then(response => response.json()).then(data => {\n      if (data.ok) {\n        memory.id = data.id;\n        dispatch(finishAddingOrder(memory));\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function startSavingOrder(memory) {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(memory)\n  };\n  return dispatch => {\n    dispatch(startWaiting());\n    fetch(`${host}/memories/${memory.id}`, options).then(checkForErrors).then(response => response.json()).then(data => {\n      if (data.ok) {\n        dispatch(finishSavingOrder(memory));\n      }\n    }).catch(e => console.error(e));\n  };\n}\nexport function startDeletingOrder(memory) {\n  const options = {\n    method: 'DELETE'\n  };\n  return dispatch => {\n    dispatch(startWaiting());\n    fetch(`${host}/memories/${memory.id}`, options).then(checkForErrors).then(response => response.json()).then(data => {\n      if (data.ok) {\n        dispatch(finishDeletingOrder(memory));\n      }\n    }).catch(e => console.error(e));\n  };\n}","map":{"version":3,"sources":["C:/UWEC/CS268/Project2/CS268_WebProject2/project2/src/action.js"],"names":["Action","Object","freeze","LoadMemories","FinishAddingOrder","EnterEditMode","LeaveEditMode","FinishSavingOrder","FinishDeletingOrder","StartWaiting","startWaiting","type","loadMemories","memories","payload","finishAddingOrder","memory","enterEditMode","leaveEditMode","finishSavingOrder","finishDeletingOrder","checkForErrors","response","ok","Error","status","statusText","host","loadDay","month","day","dispatch","fetch","then","json","data","console","log","catch","e","error","startAddingOrder","year","message","options","method","headers","body","JSON","stringify","id","startSavingOrder","startDeletingOrder"],"mappings":"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","sourcesContent":["//Enable add new key Enum\r\nexport const Action = Object.freeze({\r\n    LoadMemories: 'LoadMemories',\r\n    FinishAddingOrder:'FinishAddingOrder',\r\n    EnterEditMode:'EnterEditMode',\r\n    LeaveEditMode:'LeaveEditMode',\r\n    FinishSavingOrder: 'FinishSavingOrder',\r\n    FinishDeletingOrder: 'FinishDeletingOrder',\r\n    StartWaiting: 'StartWaiting',\r\n});\r\n\r\n//Action Creaters \r\nexport function startWaiting(){\r\n    return {\r\n        type:Action.StartWaiting,\r\n    }\r\n}\r\n\r\nexport function loadMemories(memories){\r\n    return {\r\n        type:Action.LoadMemories,\r\n        payload: memories,\r\n    }\r\n}\r\n\r\nexport function finishAddingOrder(memory){\r\n    return {\r\n        type:Action.FinishAddingOrder,\r\n        payload: memory,\r\n    }\r\n}\r\n\r\nexport function enterEditMode(memory){\r\n    return {\r\n        type:Action.EnterEditMode,\r\n        payload: memory,\r\n    }\r\n}\r\n\r\nexport function leaveEditMode(memory){\r\n    return {\r\n        type:Action.LeaveEditMode,\r\n        payload: memory,\r\n    }\r\n}\r\n\r\nexport function finishSavingOrder(memory){\r\n    return {\r\n        type:Action.FinishSavingOrder,\r\n        payload: memory,\r\n    }\r\n}\r\n\r\nexport function finishDeletingOrder(memory){\r\n    return {\r\n        type:Action.FinishDeletingOrder,\r\n        payload: memory,\r\n    }\r\n}\r\n\r\nfunction checkForErrors(response){\r\n    if(!response.ok){\r\n        throw Error(`${response.status}: ${response.statusText}`);\r\n    }\r\n    return response;\r\n}\r\n\r\nconst host = 'https://zhuj3128.duckdns.org:8442';\r\n\r\nexport function loadDay(month,day){\r\n    // return function\r\n    return dispatch => {\r\n        //run background\r\n        dispatch(startWaiting());\r\n        fetch(`${host}/memories/${month}/${day}`)\r\n        .then(checkForErrors)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if(data.ok){\r\n                console.log(data.memories);\r\n               dispatch(loadMemories(data.memories));\r\n            }\r\n        })\r\n        .catch(e=>console.error(e));\r\n    }\r\n}\r\n\r\nexport function startAddingOrder(year,month,day){\r\n    const memory = {year,month,day,message:''};\r\n    const options = {\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify(memory),\r\n    }\r\n    return dispatch => {\r\n        dispatch(startWaiting());\r\n        fetch(`${host}/memories`,options)\r\n        .then(checkForErrors)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if(data.ok){\r\n               memory.id = data.id;\r\n               dispatch(finishAddingOrder(memory));\r\n            }\r\n        })\r\n        .catch(e=>console.error(e));\r\n    }\r\n}\r\n\r\nexport function startSavingOrder(memory){\r\n    const options = {\r\n        method:'PATCH',\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify(memory),\r\n    }\r\n    return dispatch => {\r\n        dispatch(startWaiting());\r\n        fetch(`${host}/memories/${memory.id}`,options)\r\n        .then(checkForErrors)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if(data.ok){\r\n               dispatch(finishSavingOrder(memory));\r\n            }\r\n        })\r\n        .catch(e=>console.error(e));\r\n    };\r\n}\r\n\r\nexport function startDeletingOrder(memory){\r\n    const options = {\r\n        method:'DELETE',\r\n    };\r\n    return dispatch => {\r\n        dispatch(startWaiting());\r\n      fetch(`${host}/memories/${memory.id}`, options)\r\n        .then(checkForErrors)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if(data.ok){\r\n               dispatch(finishDeletingOrder(memory));\r\n            }\r\n        })\r\n        .catch(e=>console.error(e));\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}