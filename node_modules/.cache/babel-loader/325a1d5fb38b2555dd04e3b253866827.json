{"ast":null,"code":"import { Action } from \"./action\";\nconst initialState = {\n  isWaiting: false,\n  memories: []\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case Action.LoadMemories:\n      return { ...state,\n        memories: action.payload\n      };\n\n    case Action.FinishAddingMemory:\n      return { ...state,\n        memories: [{ ...action.payload,\n          isEditing: true\n        }, ...state.memories]\n      };\n\n    case Action.EnterEditMode:\n      return { ...state,\n        memories: state.memories.map(memory => {\n          if (memory.id === action.payload.id) {\n            return { ...memory,\n              isEditing: true\n            };\n          } else {\n            return memory;\n          }\n        })\n      };\n\n    case Action.LeaveEditMode:\n      return { ...state,\n        memories: state.memories.map(memory => {\n          if (memory.id === action.payload.id) {\n            return { ...memory,\n              isEditing: undefined\n            }; //desapear\n          } else {\n            return memory;\n          }\n        })\n      };\n\n    case Action.FinishSavingMemory:\n      return { ...state,\n        memories: state.memories.map(memory => {\n          if (memory.id === action.payload.id) {\n            return action.payload; //desapear\n          } else {\n            return memory;\n          }\n        })\n      };\n\n    case Action.FinishDeletingMemory:\n      return { ...state,\n        memories: state.memories.filter(memory => memory.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["C:/UWEC/CS268/Project2/CS268_WebProject2/project2/src/reducer.js"],"names":["Action","initialState","isWaiting","memories","reducer","state","action","type","LoadMemories","payload","FinishAddingMemory","isEditing","EnterEditMode","map","memory","id","LeaveEditMode","undefined","FinishSavingMemory","FinishDeletingMemory","filter"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,KADM;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAKA,SAASC,OAAT,CAAiBC,KAAK,GAACJ,YAAvB,EAAoCK,MAApC,EAA2C;AACvC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,MAAM,CAACQ,YAAZ;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,QAAQ,EAACG,MAAM,CAACG;AAFd,OAAN;;AAIJ,SAAKT,MAAM,CAACU,kBAAZ;AACI,aAAM,EACF,GAAGL,KADD;AAEFF,QAAAA,QAAQ,EAAE,CAAC,EAAC,GAAGG,MAAM,CAACG,OAAX;AAAoBE,UAAAA,SAAS,EAAC;AAA9B,SAAD,EAAqC,GAAGN,KAAK,CAACF,QAA9C;AAFR,OAAN;;AAIJ,SAAKH,MAAM,CAACY,aAAZ;AACI,aAAM,EACD,GAAGP,KADF;AAEDF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeU,GAAf,CAAmBC,MAAM,IAAE;AAClC,cAAGA,MAAM,CAACC,EAAP,KAAcT,MAAM,CAACG,OAAP,CAAeM,EAAhC,EAAmC;AAC/B,mBAAO,EAAC,GAAGD,MAAJ;AAAWH,cAAAA,SAAS,EAAE;AAAtB,aAAP;AACH,WAFD,MAEK;AACD,mBAAOG,MAAP;AACH;AACH,SANS;AAFT,OAAN;;AAUJ,SAAKd,MAAM,CAACgB,aAAZ;AACI,aAAM,EACD,GAAGX,KADF;AAEDF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeU,GAAf,CAAmBC,MAAM,IAAE;AAClC,cAAGA,MAAM,CAACC,EAAP,KAAcT,MAAM,CAACG,OAAP,CAAeM,EAAhC,EAAmC;AAC/B,mBAAO,EAAC,GAAGD,MAAJ;AAAWH,cAAAA,SAAS,EAAEM;AAAtB,aAAP,CAD+B,CAE/B;AACH,WAHD,MAGK;AACD,mBAAOH,MAAP;AACH;AACH,SAPS;AAFT,OAAN;;AAWJ,SAAKd,MAAM,CAACkB,kBAAZ;AACI,aAAM,EACD,GAAGb,KADF;AAEDF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeU,GAAf,CAAmBC,MAAM,IAAE;AAClC,cAAGA,MAAM,CAACC,EAAP,KAAcT,MAAM,CAACG,OAAP,CAAeM,EAAhC,EAAmC;AAC/B,mBAAOT,MAAM,CAACG,OAAd,CAD+B,CAE/B;AACH,WAHD,MAGK;AACD,mBAAOK,MAAP;AACH;AACH,SAPS;AAFT,OAAN;;AAWJ,SAAKd,MAAM,CAACmB,oBAAZ;AACI,aAAM,EACD,GAAGd,KADF;AAEDF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeiB,MAAf,CAAsBN,MAAM,IAAGA,MAAM,CAACC,EAAP,KAAcT,MAAM,CAACG,OAAP,CAAeM,EAA5D;AAFT,OAAN;;AAIJ;AACI,aAAOV,KAAP;AApDR;AAsDH;;AAED,eAAeD,OAAf","sourcesContent":["import { Action } from \"./action\";\r\n\r\nconst initialState = {\r\n    isWaiting: false,\r\n    memories: [],\r\n};\r\n\r\nfunction reducer(state=initialState,action){\r\n    switch(action.type){\r\n        case Action.LoadMemories:\r\n            return{\r\n                ...state,\r\n                memories:action.payload,\r\n            };\r\n        case Action.FinishAddingMemory:\r\n            return{\r\n                ...state,\r\n                memories: [{...action.payload, isEditing:true},...state.memories],\r\n            };\r\n        case Action.EnterEditMode:\r\n            return{\r\n                 ...state,\r\n                 memories: state.memories.map(memory=>{\r\n                    if(memory.id === action.payload.id){\r\n                        return {...memory,isEditing: true};\r\n                    }else{\r\n                        return memory;\r\n                    }\r\n                 }),\r\n            };\r\n        case Action.LeaveEditMode:\r\n            return{\r\n                 ...state,\r\n                 memories: state.memories.map(memory=>{\r\n                    if(memory.id === action.payload.id){\r\n                        return {...memory,isEditing: undefined};\r\n                        //desapear\r\n                    }else{\r\n                        return memory;\r\n                    }\r\n                 }),\r\n            };\r\n        case Action.FinishSavingMemory:\r\n            return{\r\n                 ...state,\r\n                 memories: state.memories.map(memory=>{\r\n                    if(memory.id === action.payload.id){\r\n                        return action.payload;\r\n                        //desapear\r\n                    }else{\r\n                        return memory;\r\n                    }\r\n                 }),\r\n            };\r\n        case Action.FinishDeletingMemory:\r\n            return{\r\n                 ...state,\r\n                 memories: state.memories.filter(memory=> memory.id !== action.payload.id),\r\n            };\r\n        default:\r\n            return state;\r\n        }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}