{"ast":null,"code":"var _jsxFileName = \"C:\\\\UWEC\\\\CS268\\\\Project2\\\\CS268_WebProject2\\\\project2\\\\src\\\\App.js\";\n// useEffect show the output once the user enters the website\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { Memory } from './Memory'; // Hook\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadDay, startAddingOrder } from './action'; //getting data from the system\n\nconst date = new Date(); //js build in class\n\nconst year = date.getFullYear();\nconst month = date.getMonth() + 1;\nconst day = date.getDate();\n\nfunction App() {\n  // get data(list of memoris) from store\n  const memories = useSelector(state => state.memories);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDay(month, day));\n  }, [dispatch]);\n\n  const onAdd = () => {\n    dispatch(startAddingOrder(year, month, day));\n  }; //dispatch dependency, only run once\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"memories-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"New Order\"), memories.map(memory => /*#__PURE__*/React.createElement(Memory, {\n    key: memory.id,\n    memory: memory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 31\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/UWEC/CS268/Project2/CS268_WebProject2/project2/src/App.js"],"names":["React","useEffect","Memory","useSelector","useDispatch","loadDay","startAddingOrder","date","Date","year","getFullYear","month","getMonth","day","getDate","App","memories","state","dispatch","onAdd","map","memory","id"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,QAAqB,UAArB,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,EAAiBC,gBAAjB,QAAwC,UAAxC,C,CAEA;;AACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb,C,CAAyB;;AACzB,MAAMC,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAb;AACA,MAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,KAAkB,CAAhC;AACA,MAAMC,GAAG,GAAGN,IAAI,CAACO,OAAL,EAAZ;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAMC,QAAQ,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AAEA,QAAME,QAAQ,GAAGd,WAAW,EAA5B;AAEDH,EAAAA,SAAS,CAAC,MAAI;AACXiB,IAAAA,QAAQ,CAACb,OAAO,CAACM,KAAD,EAAOE,GAAP,CAAR,CAAR;AACH,GAFS,EAER,CAACK,QAAD,CAFQ,CAAT;;AAIC,QAAMC,KAAK,GAAG,MAAK;AACjBD,IAAAA,QAAQ,CAACZ,gBAAgB,CAACG,IAAD,EAAME,KAAN,EAAYE,GAAZ,CAAjB,CAAR;AACD,GAFD,CAVa,CAcf;;;AACE,sBACE;AAAK,IAAA,EAAE,EAAG,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAQ,IAAA,OAAO,EAAIM,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIGH,QAAQ,CAACI,GAAT,CAAaC,MAAM,iBAAI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAIA,MAAM,CAACC,EAAtB;AAA0B,IAAA,MAAM,EAAED,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAJH,CADF;AAQD;;AAED,eAAeN,GAAf","sourcesContent":["// useEffect show the output once the user enters the website\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport {Memory} from './Memory';\n// Hook\nimport {useSelector, useDispatch} from 'react-redux';\nimport {loadDay, startAddingOrder} from './action';\n\n//getting data from the system\nconst date = new Date(); //js build in class\nconst year = date.getFullYear();\nconst month = date.getMonth() + 1;\nconst day = date.getDate();\n\nfunction App() {\n  // get data(list of memoris) from store\n  const memories = useSelector(state => state.memories);\n\n  const dispatch = useDispatch();\n\n useEffect(()=>{\n    dispatch(loadDay(month,day));\n},[dispatch]);\n\n  const onAdd = () =>{\n    dispatch(startAddingOrder(year,month,day));\n  }\n\n//dispatch dependency, only run once\n  return (\n    <div id = \"memories-root\">\n      {/* map function - Array of memories into array components */}\n      {/* <button onClick={onLoad}>load</button> */}\n      <button onClick = {onAdd}>New Order</button>\n      {memories.map(memory => <Memory key = {memory.id} memory={memory}/>)}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}