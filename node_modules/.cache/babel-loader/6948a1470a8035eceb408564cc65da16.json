{"ast":null,"code":"var _jsxFileName = \"C:\\\\UWEC\\\\CS268\\\\Project2\\\\CS268_WebProject2\\\\project2\\\\src\\\\Memory.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { enterEditMode, leaveEditMode } from './action';\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"September\", \"October\", \"November\", \"December\"]; //props - grab data from the parent\n\nexport function Memory(props) {\n  const memory = props.memory;\n  const dispatch = useDispatch();\n  const [year, setYear] = useState(memory.year);\n  const [month, setMonth] = useState(memory.month);\n  const [day, setDay] = useState(memory.day);\n  const [message, setMessage] = useState(memory.message);\n\n  const onEdit = () => {\n    dispatch(enterEditMode(memory));\n  };\n\n  const onCancel = () => {\n    dispatch(leaveEditMode(memory));\n  };\n\n  const onSave = () => {\n    dispatch(startSavingMemory({\n      id: memory.id,\n      year,\n      month,\n      day,\n      message\n    }));\n  };\n\n  if (memory.isEditing) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"memory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"memory-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: year,\n      onChange: e => setYear(parseInt(e.target.value)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: month,\n      onChange: e => setMonth(parseInt(e.target.value)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: day,\n      onChange: e => setDay(parseInt(e.target.value)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \"save\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete-button\",\n      onClick: onDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"delete\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"memory-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"memory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"memory-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, memory.year), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, months[memory.month - 1], memory.day), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"edit\")), /*#__PURE__*/React.createElement(\"dic\", {\n      className: \"memory-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, memory.message));\n  }\n}","map":{"version":3,"sources":["C:/UWEC/CS268/Project2/CS268_WebProject2/project2/src/Memory.js"],"names":["React","useState","useDispatch","enterEditMode","leaveEditMode","months","Memory","props","memory","dispatch","year","setYear","month","setMonth","day","setDay","message","setMessage","onEdit","onCancel","onSave","startSavingMemory","id","isEditing","e","parseInt","target","value","onDelete"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {enterEditMode, leaveEditMode} from './action';\r\n\r\nconst months = [\"January\",\"February\",\"March\",\"April\",\"May\",\r\n\"June\",\"July\",\"August\", \"September\",\"September\",\"October\",\"November\",\r\n\"December\"];\r\n\r\n//props - grab data from the parent\r\nexport function Memory(props){\r\n    const memory = props.memory;\r\n    const dispatch = useDispatch();\r\n    const [year,setYear] = useState(memory.year);\r\n    const [month,setMonth] = useState(memory.month);\r\n    const [day,setDay] = useState(memory.day);\r\n    const [message,setMessage] = useState(memory.message);\r\n\r\n    const onEdit = () => {\r\n        dispatch(enterEditMode(memory));\r\n    }\r\n\r\n    const onCancel = () => {\r\n        dispatch(leaveEditMode(memory));\r\n    }\r\n\r\n    const onSave = ()=>{\r\n        dispatch(startSavingMemory({\r\n            id: memory.id,\r\n            year,\r\n            month,\r\n            day,\r\n            message,\r\n        }));\r\n    }\r\n\r\n    if(memory.isEditing){\r\n        return(\r\n        <div className =\"memory\">\r\n                <div className=\"memory-left\">\r\n                    <input type = \"text\" value={year} onChange={e =>\r\n                    setYear(parseInt(e.target.value))}/>\r\n                    <input type = \"text\" value={month} onChange={e =>\r\n                    setMonth(parseInt(e.target.value))}/>\r\n                    <input type = \"text\" value={day} onChange={e =>\r\n                    setDay(parseInt(e.target.value))}/>\r\n                    <button onClick = {onSave}>save</button>\r\n                    <button onClick = {onCancel}>cancel</button>\r\n                    <button className =\"delete-button\"onClick = {onDelete}>delete</button>\r\n                </div>\r\n                <div className = \"memory-right\">\r\n                    <textarea value={message} onChange={e =>\r\n                    setMessage(e.target.value)}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else{\r\n        return(\r\n            <div className =\"memory\">\r\n                <div className=\"memory-left\">\r\n                    <span className = \"year\">{memory.year}</span>\r\n                    <span>{months[memory.month - 1]}{memory.day}</span>\r\n                    <button onClick={onEdit}>edit</button>\r\n                </div>\r\n                <dic className = \"memory-right\">\r\n                    {memory.message}\r\n                </dic>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}